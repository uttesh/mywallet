{"version":3,"sources":["context/AppReducer.js","context/global.context.js","components/header.js","components/add.transaction.js","components/income.list.js","components/expense.list.js","App.js","serviceWorker.js","index.js"],"names":["state","action","type","transactions","payload","filter","item","id","initialState","Math","random","amount","description","totalIncome","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","addTractions","transaction","deleteTractions","Header","useContext","console","log","length","map","reduce","amt","toFixed","totalExpenses","balance","expensePercentage","round","className","AddTransaction","useState","setAmount","setDescription","setType","onSubmit","e","preventDefault","_amount","Number","onChange","target","placeholder","IncomeList","incomeList","key","onClick","remove","ExpenseList","expensesList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f335c77d.chunk.js","sourcesContent":["export default (state, action) =>{\r\n\tswitch(action.type){\r\n    case 'ADD_TRANSACTION':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttransactions: [action.payload, ...state.transactions]\r\n\t\t\t}\r\n\t\tcase 'DELETE_TRANSACTION':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttransactions: state.transactions.filter(item => item.id !== action.payload)\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer'\r\n\r\n//  init the state parameter\r\n\r\nconst initialState ={\r\n  transactions: [\r\n\t\t{id: Math.random(),type:'inc', amount:10000, description:'Salary'},\r\n\t\t{id: Math.random(), type:'inc', amount:5000, description:'MSI returns'},\r\n\t\t{id: Math.random(),type:'exp', amount:1000, description:'Rent'},\r\n\t\t{id: Math.random(), type:'exp', amount:5000, description:'Home loan EMI'}\r\n\t],\r\n\ttotalIncome:0\r\n}\r\n\r\n// create the context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// create provider\r\n\r\nexport const GlobalProvider = ({children}) =>{\r\n\t const [state,dispatch] = useReducer(AppReducer,initialState)\r\n\r\n\t // actions functions\r\n\t const addTractions = (transaction) =>{\r\n       dispatch({\r\n\t\t\t\t type: 'ADD_TRANSACTION',\r\n\t\t\t\t payload: transaction\r\n\t\t\t })\r\n\t }\r\n\r\n\t const deleteTractions = (id) =>{\r\n\t\tdispatch({\r\n\t\t\ttype: 'DELETE_TRANSACTION',\r\n\t\t\tpayload: id\r\n\t\t})\r\n}\r\n\t \r\n\t return (\r\n\t\t <GlobalContext.Provider value={{\r\n\t\t\t transactions: state.transactions,\r\n\t\t\t addTractions,\r\n\t\t\t deleteTractions\r\n\t\t }}> \r\n\t\t {children}\r\n\t\t </GlobalContext.Provider>\r\n\t )\r\n\r\n\r\n}","import React,{useContext} from 'react';\r\nimport {GlobalContext} from '../context/global.context'\r\nexport const Header = () =>{\r\n  \r\n\tconst {transactions} = useContext(GlobalContext)\r\n\tconsole.log('header : ',transactions.length)\r\n\tconst incomeList = transactions.filter(item=>item.type==='inc');\r\n\tconst totalIncome = incomeList.map(item=>item.amount).reduce((amt,item) =>(amt+=item),0).toFixed(2);\r\n\tconst expenseList = transactions.filter(item=>item.type==='exp')\r\n\tconst totalExpenses = expenseList.map(item => item.amount).reduce((amt,item) =>(amt+=item),0).toFixed(2);\r\n\tconst balance = totalIncome - totalExpenses;\r\n\t\r\n\tconst expensePercentage = Math.round((totalExpenses / totalIncome) * 100)\r\n\r\n\treturn(\r\n\t\t\t\t<div className=\"budget\">\r\n\t\t\t\t\t<div className=\"budget__title\">\r\n\t\t\t\t\t\tMy Wallet <span className=\"budget__title--month\">balance</span>:\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"budget__value\">₹{balance}</div>\r\n\t\t\t\t\t<div className=\"budget__income clearfix\">\r\n\t\t\t\t\t\t<div className=\"budget__income--text\">Income</div>\r\n\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<div className=\"budget__income--value\">+ ₹{totalIncome}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"budget__income--percentage\">&nbsp;</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"budget__expenses clearfix\">\r\n\t\t\t\t\t\t<div className=\"budget__expenses--text\">Expenses</div>\r\n\t\t\t\t\t\t<div className=\"right clearfix\">\r\n\t\t\t\t\t\t\t\t<div className=\"budget__expenses--value\">- ₹{totalExpenses}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"budget__expenses--percentage\">{expensePercentage}%</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t)\r\n}","import React,{useState,useContext} from 'react';\r\nimport IosCheckmarkCircleOutline from 'react-ionicons/lib/IosCheckmarkCircleOutline'\r\nimport {GlobalContext} from '../context/global.context'\r\n\r\nexport const AddTransaction = () =>{\r\n\r\n\tconst [ amount,setAmount ] = useState(0);\r\n\tconst [ description, setDescription] = useState('')\r\n\tconst [ type, setType] = useState('inc')\r\n\tconst {addTractions} = useContext(GlobalContext)\r\n\r\n const onSubmit = (e) =>{\r\n\t e.preventDefault();\r\n\t const _amount = Number(amount)\r\n\t const transaction = {\r\n\t\t id: Math.random(),\r\n\t\t type:type,\r\n\t\t amount:_amount,\r\n\t\t description:description\r\n\t }\r\n\t addTractions(transaction)\r\n }\r\n\r\n\treturn(\r\n\t\t\t\t<div className=\"add\">\r\n\t\t\t\t\t<form onSubmit={onSubmit} >\r\n\t\t\t\t\t\t\t<div className=\"add__container\">\r\n\t\t\t\t\t\t\t\t\t<select className=\"add__type red-focus\" onChange={e => setType(e.target.value)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value='inc'>Income</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value='exp'>Expense</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" value={description} onChange={e=> setDescription(e.target.value)}className=\"add__description red-focus\" placeholder=\"Add description\"/>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" value={amount} onChange={e =>{setAmount(e.target.value)}} className=\"add__value red-focus\" placeholder=\"Value\"/>\r\n\t\t\t\t\t\t\t\t\t<button className=\"add__btn active\" ><IosCheckmarkCircleOutline /></button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t</div>\r\n\t)\r\n}","import React,{useContext} from 'react';\r\nimport IosCloseCircleOutline from 'react-ionicons/lib/IosCloseCircleOutline'\r\nimport {GlobalContext} from '../context/global.context'\r\nexport const IncomeList = () =>{\r\n \r\n\tconst {transactions,deleteTractions} = useContext(GlobalContext)\r\n\t\r\n\tconst incomeList = transactions.filter(item => item.type ==='inc')\r\n\r\n   const remove = (e,id) =>{\r\n\t\t e.preventDefault();\r\n\t\t deleteTractions(id);\r\n\t }\r\n\r\n\treturn(\r\n\t\t<div className=\"income\">\r\n\t\t<h2 className=\"income__title\">Income</h2>\r\n\t\t<div className=\"income__list\">\r\n\t\t\t{\r\n\t\t\t\tincomeList.map(\r\n\t\t\t\t\ttransaction =>(\r\n\t\t\t\t\t\t\t\t\t<div className=\"item clearfix\" key={Math.random()}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"item__description\">{transaction.description}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"right clearfix\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"item__value\">+ ₹{ transaction.amount}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"item__delete\"><button className=\"item__delete--btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => remove(e,transaction.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t><IosCloseCircleOutline/></button></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n </div>\r\n\t)\r\n}","import React,{useContext} from 'react';\r\nimport IosCloseCircleOutline from 'react-ionicons/lib/IosCloseCircleOutline'\r\nimport {GlobalContext} from '../context/global.context'\r\nexport const ExpenseList = () =>{\r\n\r\n  const {transactions,deleteTractions} = useContext(GlobalContext)\r\n\tconst expensesList = transactions.filter(item => item.type==='exp')\r\n\tconst incomeList = transactions.filter(item=>item.type==='inc');\r\n\tconst totalIncome = incomeList.map(item=>item.amount).reduce((amt,item) =>(amt+=item),0).toFixed(2);\r\n\t\r\n\tconst calculatePercentage = (value) =>{\r\n    return Math.round((value/totalIncome) * 100)\r\n\t}\r\n\r\n\tconst remove = (e,id) =>{\r\n\t\te.preventDefault();\r\n\t\tdeleteTractions(id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"expenses\">\r\n\t\t<h2 className=\"expenses__title\">Expenses</h2>\r\n\t\t<div className=\"expenses__list\">\r\n\t\t\t{\r\n\t\t\t\texpensesList.map(transaction =>(\r\n\t\t\t\t\t\t\t<div className=\"item clearfix\" id=\"exp-0\" key={Math.random()}>\r\n\t\t\t\t\t\t\t<div className=\"item__description\">{transaction.description}</div>\r\n\t\t\t\t\t\t\t<div className=\"right clearfix\">\r\n\t\t\t\t\t\t\t\t<div className=\"item__value\">- ₹{transaction.amount}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"item__percentage\">{calculatePercentage(transaction.amount)}%</div>\r\n\t\t\t\t\t\t\t\t<div className=\"item__delete\"><button className=\"item__delete--btn\" onClick={(e) => remove(e,transaction.id)}><IosCloseCircleOutline /></button></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</div>\r\n </div>\r\n\t)\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from './components/header'\nimport {AddTransaction}  from './components/add.transaction'\nimport { IncomeList } from './components/income.list'\nimport {ExpenseList} from './components/expense.list'\nimport {GlobalProvider} from './context/global.context'\nfunction App() {\n  return (\n   <GlobalProvider>\n\t\t <>\n\t\t\t<div className=\"top\">\n\t\t\t\t\t<Header></Header>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottom\">\n\t\t\t\t\t<AddTransaction></AddTransaction>\n\t\t\t\t\t<div className=\"container clearfix\">\n\t\t\t\t\t\t\t<IncomeList></IncomeList>\n\t\t\t\t\t\t\t<ExpenseList></ExpenseList>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</>\n\t </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}